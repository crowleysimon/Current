// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.31'
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.0-alpha03'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

ext {

    /** Android **/

    minSdkVersion = 23
    compileSdkVersion = 29
    targetSdkVersion = 29
    buildToolsVersion = '29.0.0'
    versionCode = 1
    versionName = '0.1'

    /** Libraries **/

    // AndroidX https://developer.android.com/jetpack/androidx/releases
    appcompat_version = '1.1.0-beta01'
    constraintlayout_version = '2.0.0-beta1'
    room_version = '2.1.0-rc01'
    lifecycle_version = '2.1.0-beta01'
    design_version = '1.1.0-alpha07'
    support_v4_version = '1.0.0'
    recyclerview_version = '1.1.0-alpha06'

    // RxJava https://github.com/ReactiveX/RxJava
    rxJava_version = '2.2.9'

    // RxKotlin https://github.com/ReactiveX/RxKotlin
    rxKotlin_version = '2.3.0'

    // RxAndroid https://github.com/ReactiveX/RxAndroid
    rxAndroid_version = '2.1.1'

    // Javax Inject
    javax_annotation_version = '1.0'
    javax_inject_version = '1'

    // Dagger 2 (Dependency Injection) https://github.com/google/dagger
    dagger_version = '2.23.1'

    // OkHttp https://github.com/square/okhttp
    okhttp_version = '4.0.0-RC1'

    // Retrofit https://github.com/square/retrofit
    retrofit_version = '2.6.0'

    // Jodatime Android https://github.com/dlew/joda-time-android
    jodatime_version = '2.10.1.2'

    // Leak Canary https://github.com/square/leakcanary
    leak_canary_version = '1.6.3'

    // Glide https://github.com/bumptech/glide
    glide_version = '4.9.0'

    // Jsoup https://github.com/jhy/jsoup
    jsoup_version = '1.12.1'

    // Aesthetic https://github.com/afollestad/aesthetic
    aesthetic_version = '1.0.0-beta05'

    // Timber https://github.com/JakeWharton/timber
    timber_version = '4.7.1'

    /** Testing **/

    // Junit
    junit_version = '4.12'
    mockito_kotlin_version = '1.5.0'
    assertj_version = '3.8.0'

    /** Module Dependencies **/

    domain_dependencies = [
            javax_annotation: "javax.annotation:jsr250-api:$javax_annotation_version",
            javax_inject    : "javax.inject:javax.inject:$javax_inject_version",
            rxJava          : "io.reactivex.rxjava2:rxjava:$rxJava_version",
            rxKotlin        : "io.reactivex.rxjava2:rxkotlin:$rxKotlin_version"
    ]

    domain_test_dependencies = [
            junit  : "junit:junit:$junit_version",
            mockito: "com.nhaarman:mockito-kotlin:$mockito_kotlin_version"
    ]

    remote_dependencies = [
            javax_annotation  : "javax.annotation:jsr250-api:$javax_annotation_version",
            javax_inject      : "javax.inject:javax.inject:$javax_inject_version",
            rxJava            : "io.reactivex.rxjava2:rxjava:$rxJava_version",
            rxKotlin          : "io.reactivex.rxjava2:rxkotlin:$rxKotlin_version",
            kotlin            : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
            retrofit          : "com.squareup.retrofit2:retrofit:$retrofit_version",
            retrofit_converter: "com.squareup.retrofit2:converter-moshi:$retrofit_version",
            retrofit_adapter  : "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version",
            okHttp            : "com.squareup.okhttp3:okhttp:$okhttp_version",
            okHttp_logger     : "com.squareup.okhttp3:logging-interceptor:$okhttp_version",
            jsoup             : "org.jsoup:jsoup:$jsoup_version",
            jodatime          : "net.danlew:android.joda:$jodatime_version"
    ]

    data_dependencies = [
            javax_annotation: "javax.annotation:jsr250-api:$javax_annotation_version",
            javax_inject    : "javax.inject:javax.inject:$javax_inject_version",
            rxJava          : "io.reactivex.rxjava2:rxjava:$rxJava_version",
            rxKotlin        : "io.reactivex.rxjava2:rxkotlin:$rxKotlin_version",
            kotlin          : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    ]

    cache_dependencies = [
            javax_annotation: "javax.annotation:jsr250-api:$javax_annotation_version",
            javax_inject    : "javax.inject:javax.inject:$javax_inject_version",
            rxJava          : "io.reactivex.rxjava2:rxjava:$rxJava_version",
            rxKotlin        : "io.reactivex.rxjava2:rxkotlin:$rxKotlin_version",
            kotlin          : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
            room            : "androidx.room:room-runtime:$room_version",
            room_compiler   : "androidx.room:room-compiler:$room_version",
            room_rxjava     : "androidx.room:room-rxjava2:$room_version",
    ]

    presentation_dependencies = [
            constraint_layout       : "androidx.constraintlayout:constraintlayout:$constraintlayout_version",
            rxJava                  : "io.reactivex.rxjava2:rxjava:$rxJava_version",
            rxKotlin                : "io.reactivex.rxjava2:rxkotlin:$rxKotlin_version",
            rxAndroid               : "io.reactivex.rxjava2:rxandroid:$rxAndroid_version",
            dagger                  : "com.google.dagger:dagger:$dagger_version",
            dagger_compiler         : "com.google.dagger:dagger-compiler:$dagger_version",
            dagger_android          : "com.google.dagger:dagger-android:$dagger_version",
            dagger_android_support  : "com.google.dagger:dagger-android-support:$dagger_version",
            dagger_android_processor: "com.google.dagger:dagger-android-processor:$dagger_version",
            kotlin                  : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version",
            javax_annotation        : "javax.annotation:jsr250-api:$javax_annotation_version",
            javax_inject            : "javax.inject:javax.inject:$javax_inject_version",
            lifecycle_extensions    : "androidx.lifecycle:lifecycle-extensions:$lifecycle_version",
            lifecycle_runtime       : "androidx.lifecycle:lifecycle-runtime:$lifecycle_version",
            lifecycle_compiler      : "androidx.lifecycle:lifecycle-compiler:$lifecycle_version",
            app_compat              : "androidx.appcompat:appcompat:$appcompat_version",
            design                  : "com.google.android.material:material:$design_version",
            support_V4              : "androidx.legacy:legacy-support-v4:$support_v4_version",
            recyclerview            : "androidx.recyclerview:recyclerview:$recyclerview_version",
            retrofit                : "com.squareup.retrofit2:retrofit:$retrofit_version",
            retrofit_converter      : "com.squareup.retrofit2:converter-moshi:$retrofit_version",
            retrofit_adapter        : "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version",
            okHttp                  : "com.squareup.okhttp3:okhttp:$okhttp_version",
            okHttp_logger           : "com.squareup.okhttp3:logging-interceptor:$okhttp_version",
            jodatime                : "net.danlew:android.joda:$jodatime_version",
            leak_canary             : "com.squareup.leakcanary:leakcanary-android:$leak_canary_version",
            leak_canary_no_op       : "com.squareup.leakcanary:leakcanary-android-no-op:$leak_canary_version",
            glide                   : "com.github.bumptech.glide:glide:$glide_version",
            glide_compiler          : "com.github.bumptech.glide:compiler:$glide_version",
            aesthetic               : "com.afollestad:aesthetic:$aesthetic_version",
            timber                  : "com.jakewharton.timber:timber:$timber_version",
            jsoup                   : "org.jsoup:jsoup:$jsoup_version"
    ]
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
        mavenCentral()
        maven { url "https://kotlin.bintray.com/kotlinx" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
